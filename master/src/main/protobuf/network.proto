syntax = "proto3";

package protos;

service Network {
    rpc Connection (ConnectionRequest) returns (ConnectionReply) {}
    rpc Sampling (stream SamplingRequest) returns (SamplingReply) {}
    rpc SortPartition (SortPartitionRequest) returns (SortPartitionReply) {}
    rpc Shuffle (ShuffleRequest) returns (ShuffleReply) {}
    rpc Merge (MergeRequest) returns (MergeReply) {}
    rpc Terminate (TerminateRequest) returns (TerminateReply) {}
  }

  enum ResultType {
    FAILURE = 0;
    PROGRESSING = 1;
    PENDING = 2;
    SUCCESS = 3;  
  }
/*
  connection phase messages
*/
  message ConnectionRequest {
    string ip = 1;
  }
  message ConnectionReply {
    ResultType result = 1;
  }

/*
  sampling phase messages
*/
  message SamplingRequest {
    int32 id =1;
    repeated string samples=2;
  }
  message SamplingReply {
    ResultType result =1;
  }

/*
  Sort & partition phase messages
*/
  message SortPartitionRequest {
    string name = 1;
  }
  message SortPartitionReply {
    string message = 1;
  }

/*
  Shuffle phase messages
*/
  message ShuffleRequest {
    string name = 1;
  }
  message ShuffleReply {
    string message = 1;
  }

/*
  Merge phase messages
*/
  message MergeRequest {
    string name = 1;
  }
  message MergeReply {
    string message = 1;
  }

/*
  Termination phase messages
*/  
  message TerminateRequest {
    int32 id =1;
    ResultType statu =2;
  }
  message TerminateReply {}